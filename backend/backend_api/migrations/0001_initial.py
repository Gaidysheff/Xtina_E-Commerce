# Generated by Django 5.1.6 on 2025-03-11 09:21

import django.db.models.deletion
import django_countries.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aroma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'аромат',
                'verbose_name_plural': 'АРОМАТИЗАТОРЫ: Ароматы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BaseNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'базовые ноты',
                'verbose_name_plural': 'АРОМАТИЗАТОРЫ: Базовые ноты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Chord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'аккорды',
                'verbose_name_plural': 'ДУХИ: Аккорды',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'состав',
                'verbose_name_plural': 'ДУХИ: Состав',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('image', models.ImageField(blank=True, null=True, upload_to='image_delivery', verbose_name='Загрузить фото')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('code', models.CharField(max_length=64, verbose_name='код')),
                ('handler', models.CharField(max_length=64, verbose_name='handler')),
            ],
            options={
                'verbose_name': 'Способы доставки',
                'verbose_name_plural': 'Способы доставки',
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'семейство',
                'verbose_name_plural': 'ДУХИ: Семейство',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('image', models.ImageField(blank=True, null=True, upload_to='image_gift', verbose_name='Загрузить фото')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('volume', models.CharField(max_length=8, verbose_name='Объём')),
            ],
            options={
                'verbose_name': 'Подарочный пробник',
                'verbose_name_plural': 'Подарочный пробник',
            },
        ),
        migrations.CreateModel(
            name='MiddleNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'средние ноты',
                'verbose_name_plural': 'АРОМАТИЗАТОРЫ: Средние ноты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'основные ноты',
                'verbose_name_plural': 'ДУХИ: Основные ноты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TopNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='---', max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'верхние ноты',
                'verbose_name_plural': 'АРОМАТИЗАТОРЫ: Верхние ноты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Consumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подзаголовок')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('image', models.ImageField(upload_to='image_freshener', verbose_name='Загрузить фото')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('is_available', models.BooleanField(choices=[(False, '--- в наличии'), (True, 'В наличии')], default=1, verbose_name='Наличие')),
                ('aroma', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, to='backend_api.aroma', verbose_name='Аромат')),
            ],
            options={
                'verbose_name': 'расходник для ароматизатора',
                'verbose_name_plural': '03-РАСХОДНИКИ',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='HeroData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('subtitle', models.CharField(max_length=255, verbose_name='Подзаголовок')),
                ('image', models.ImageField(upload_to='image_heroData', verbose_name='Загрузить фото')),
                ('noteHero1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='noteHero1', to='backend_api.note', verbose_name='Основная нота-1')),
                ('noteHero2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='noteHero2', to='backend_api.note', verbose_name='Основная нота-2')),
                ('noteHero3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='noteHero3', to='backend_api.note', verbose_name='Основная нота-3')),
            ],
            options={
                'verbose_name': 'Данные для Слайдера',
                'verbose_name_plural': 'Данные для Слайдера',
            },
        ),
        migrations.CreateModel(
            name='Perfume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('brand', models.CharField(max_length=255, verbose_name='Бренд')),
                ('image', models.ImageField(upload_to='image_perfume', verbose_name='Загрузить фото')),
                ('price3', models.IntegerField(verbose_name='Цена за 3 мл.')),
                ('price5', models.IntegerField(verbose_name='Цена за 5 мл.')),
                ('price10', models.IntegerField(verbose_name='Цена за 10 мл.')),
                ('price20', models.IntegerField(verbose_name='Цена за 20 мл.')),
                ('price30', models.IntegerField(verbose_name='Цена за 30 мл.')),
                ('perfumer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Парфюмер')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Страна')),
                ('year', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год создания')),
                ('sex', models.CharField(choices=[('M', 'для мужчин'), ('F', 'для женщин'), ('U', 'унисекс')], default='U', max_length=2, verbose_name='Пол')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Отзывы')),
                ('is_available', models.BooleanField(choices=[(False, '--- в наличии'), (True, 'В наличии')], default=1, verbose_name='Наличие')),
                ('chord1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='chord1', to='backend_api.chord', verbose_name='Аккорд-1')),
                ('chord2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='chord2', to='backend_api.chord', verbose_name='Аккорд-2')),
                ('chord3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='chord3', to='backend_api.chord', verbose_name='Аккорд-3')),
                ('chord4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='chord4', to='backend_api.chord', verbose_name='Аккорд-4')),
                ('chord5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='chord5', to='backend_api.chord', verbose_name='Аккорд-5')),
                ('compound1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='compound1', to='backend_api.compound', verbose_name='Состав-1')),
                ('compound2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='compound2', to='backend_api.compound', verbose_name='Состав-2')),
                ('compound3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='compound3', to='backend_api.compound', verbose_name='Состав-3')),
                ('compound4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='compound4', to='backend_api.compound', verbose_name='Состав-4')),
                ('compound5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='compound5', to='backend_api.compound', verbose_name='Состав-5')),
                ('family1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='family1', to='backend_api.family', verbose_name='Семейство-1')),
                ('family2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='family2', to='backend_api.family', verbose_name='Семейство-2')),
                ('family3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='family3', to='backend_api.family', verbose_name='Семейство-3')),
                ('family4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='family4', to='backend_api.family', verbose_name='Семейство-4')),
                ('family5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='family5', to='backend_api.family', verbose_name='Семейство-5')),
                ('note1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='note1', to='backend_api.note', verbose_name='Основная нота-1')),
                ('note2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='note2', to='backend_api.note', verbose_name='Основная нота-2')),
                ('note3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='note3', to='backend_api.note', verbose_name='Основная нота-3')),
                ('note4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='note4', to='backend_api.note', verbose_name='Основная нота-4')),
                ('note5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='note5', to='backend_api.note', verbose_name='Основная нота-5')),
            ],
            options={
                'verbose_name': 'духи',
                'verbose_name_plural': '01-ДУХИ',
                'ordering': ['brand', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Freshener',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подзаголовок')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('image', models.ImageField(upload_to='image_freshener', verbose_name='Загрузить фото')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_available', models.BooleanField(choices=[(False, '--- в наличии'), (True, 'В наличии')], default=1, verbose_name='Наличие')),
                ('aroma1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='aroma1', to='backend_api.aroma', verbose_name='Аромат-1')),
                ('aroma2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='aroma2', to='backend_api.aroma', verbose_name='Аромат-2')),
                ('aroma3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='aroma3', to='backend_api.aroma', verbose_name='Аромат-3')),
                ('aroma4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='aroma4', to='backend_api.aroma', verbose_name='Аромат-4')),
                ('aroma5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='aroma5', to='backend_api.aroma', verbose_name='Аромат-5')),
                ('baseNote1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='baseNote1', to='backend_api.basenote', verbose_name='Базовая нота-1')),
                ('baseNote2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='baseNote2', to='backend_api.basenote', verbose_name='Базовая нота-2')),
                ('baseNote3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='baseNote3', to='backend_api.basenote', verbose_name='Базовая нота-3')),
                ('baseNote4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='baseNote4', to='backend_api.basenote', verbose_name='Базовая нота-4')),
                ('baseNote5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='baseNote5', to='backend_api.basenote', verbose_name='Базовая нота-5')),
                ('middleNote1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='middleNote1', to='backend_api.middlenote', verbose_name='Средняя нота-1')),
                ('middleNote2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='middleNote2', to='backend_api.middlenote', verbose_name='Средняя нота-2')),
                ('middleNote3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='middleNote3', to='backend_api.middlenote', verbose_name='Средняя нота-3')),
                ('middleNote4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='middleNote4', to='backend_api.middlenote', verbose_name='Средняя нота-4')),
                ('middleNote5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='middleNote5', to='backend_api.middlenote', verbose_name='Средняя нота-5')),
                ('topNote1', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='topNote1', to='backend_api.topnote', verbose_name='Верхняя нота-1')),
                ('topNote2', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='topNote2', to='backend_api.topnote', verbose_name='Верхняя нота-2')),
                ('topNote3', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='topNote3', to='backend_api.topnote', verbose_name='Верхняя нота-3')),
                ('topNote4', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='topNote4', to='backend_api.topnote', verbose_name='Верхняя нота-4')),
                ('topNote5', models.ForeignKey(default='---', on_delete=django.db.models.deletion.CASCADE, related_name='topNote5', to='backend_api.topnote', verbose_name='Верхняя нота-5')),
            ],
            options={
                'verbose_name': 'ароматизатор',
                'verbose_name_plural': '02-АРОМАТИЗАТОРЫ',
                'ordering': ['title'],
            },
        ),
    ]
